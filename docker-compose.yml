version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: money_app_postgres
    environment:
      POSTGRES_DB: money_app
      POSTGRES_USER: money_user
      POSTGRES_PASSWORD: money_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - money_app_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: money_app_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - money_app_network

  # KrakenD API Gateway
  krakend:
    image: devopsfaith/krakend:latest
    container_name: money_app_krakend
    ports:
      - "8080:8080"
    volumes:
      - ./gateway/krakend.json:/etc/krakend/krakend.json
    networks:
      - money_app_network
    depends_on:
      - postgres
      - redis

  # User Service
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: money_app_user_service
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://money_user:money_password@postgres:5432/money_app
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_jwt_secret_here
    volumes:
      - ./backend/user-service:/app
      - /app/node_modules
    networks:
      - money_app_network
    depends_on:
      - postgres
      - redis

  # Financial Service
  financial-service:
    build:
      context: ./backend/financial-service
      dockerfile: Dockerfile
    container_name: money_app_financial_service
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      PORT: 3002
      DATABASE_URL: postgresql://money_user:money_password@postgres:5432/money_app
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend/financial-service:/app
      - /app/node_modules
    networks:
      - money_app_network
    depends_on:
      - postgres
      - redis

  # Investment Service
  investment-service:
    build:
      context: ./backend/investment-service
      dockerfile: Dockerfile
    container_name: money_app_investment_service
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      PORT: 3003
      DATABASE_URL: postgresql://money_user:money_password@postgres:5432/money_app
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend/investment-service:/app
      - /app/node_modules
    networks:
      - money_app_network
    depends_on:
      - postgres
      - redis

  # Notification Service
  notification-service:
    build:
      context: ./backend/notification-service
      dockerfile: Dockerfile
    container_name: money_app_notification_service
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: development
      PORT: 3004
      DATABASE_URL: postgresql://money_user:money_password@postgres:5432/money_app
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend/notification-service:/app
      - /app/node_modules
    networks:
      - money_app_network
    depends_on:
      - postgres
      - redis

  # Payment Service
  payment-service:
    build:
      context: ./backend/payment-service
      dockerfile: Dockerfile
    container_name: money_app_payment_service
    ports:
      - "3005:3005"
    environment:
      NODE_ENV: development
      PORT: 3005
      DATABASE_URL: postgresql://money_user:money_password@postgres:5432/money_app
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend/payment-service:/app
      - /app/node_modules
    networks:
      - money_app_network
    depends_on:
      - postgres
      - redis

  # Analytics Service
  analytics-service:
    build:
      context: ./backend/analytics-service
      dockerfile: Dockerfile
    container_name: money_app_analytics_service
    ports:
      - "3006:3006"
    environment:
      NODE_ENV: development
      PORT: 3006
      DATABASE_URL: postgresql://money_user:money_password@postgres:5432/money_app
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend/analytics-service:/app
      - /app/node_modules
    networks:
      - money_app_network
    depends_on:
      - postgres
      - redis

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: money_app_frontend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8080
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - money_app_network
    depends_on:
      - krakend

volumes:
  postgres_data:
  redis_data:

networks:
  money_app_network:
    driver: bridge
